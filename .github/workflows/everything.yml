name: "Testing & Packaging"
on: [push, pull_request]

jobs:
  testing:
    name: Testing on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]
        os: [macOS, Ubuntu]
        event-loop: ["asyncio", "curio"]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install wheel
          pip install --upgrade pip
          pip install --upgrade poetry coveralls poetry-dynamic-versioning
          poetry install --extras full

      - name: Mypy
        run: |
          poetry run mypy -p sketchbook

      - name: Lint with flake8
        run: |
          poetry run flake8 .

      - name: Pytest with asyncio
        run: |
          poetry run pytest --cov=sketchbook

      - name: Pytest with curio
        run: |
          poetry run pytest --cov=sketchbook --cov-append
        env:
          TEST_CURIO: 1

      - name: Upload Coverage
        run: coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: Testing on ${{ matrix.os }} with Python ${{ matrix.python-version }}
          COVERALLS_PARALLEL: true
          COVERALLS_SERVICE_NAME: github

  coveralls:
    name: Finish Coveralls
    needs: testing
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: All Testing Finished
        run: |
          pip3 install --upgrade coveralls
          coveralls --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_SERVICE_NAME: github

  upload_pypi:
    name: Upload to PyPI
    needs: testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.6

      - name: Install dependencies
        run: |
          pip install wheel
          pip install --upgrade pip
          pip install --upgrade poetry poetry-dynamic-versioning
          poetry install

      - name: Package Project
        run: |
          poetry version
          poetry build

      - name: Publish to Test PyPI
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          poetry config repositories.test https://test.pypi.org/legacy/
          poetry publish -r test
        env:
          POETRY_PYPI_TOKEN_TEST: ${{ secrets.TEST_PYPI_TOKEN }}

      - name: Publish to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          poetry publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
